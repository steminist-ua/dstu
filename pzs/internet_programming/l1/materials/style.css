/* 
у css використовуються параметри. Вони прописуються для селекторів.
Селектори:
    звернення до тегу - просто назва тегу без додаткових символів 
    звернення до айді відбувається через # - наприклад, #main
    звернення до класу відбувається через символ крапки . - наприклад, .text

Якщо потрібно прописати стилі для одразу декількох елементів, то їх потрібно перелічувати через кому
*/

/* 

    ПІДКЛЮЧЕННЯ ШРИФТІВ

    для підключення сторонніх шрифтів використовуємо бібліотеку відкритих шрифтів від Гугл 
    https://fonts.google.com/

    1. обираємо потрібний шрифт (або за завданням, або за особистими вподобаннями), тобто просто клікаємо на нього

    2. на сторінці зі шрифтом клікаємо Select напроти тих накреслень, які вам необхідні/подобаються 

    3. далі автоматичнол розкривається права панель з обраними вами шрифтами та накресленнями 

    4. у цій панелі у роділі "Use on the web" перемикаємо з <link> на @import
    
    5. далі копіюємо те, що вказано у тезі <style> (в середині нього, але сам тег не потрібно, наприклад, тільки рядок @import url('https://fonts.googleapis.com/css2?family=Kanit:wght@500&display=swap');) 

    6. вставляємо скопійоване у свій файл зі стилями, тобто файл з розширенням .css. Підключення шрифтів вставляємо найпершим, на самому початку файлу стилів 

    7. на сторінці з вашим обраним шрифтом, у тій же правій колонці є розділ "CSS rules to specify families". Там є вказання, як саме користуватися обраним шрифтом у стилях, щоб він застосувався 
    наприкад, font-family: 'Kanit', sans-serif;
    вам потрібно цей параметр зі значенням застосувати до ваших елементів на сторінці. Якщо весь текст на сторінці має бути з таким шрифтом, то ви можете вказати звернення до тегу body і в ньому вставити скопійований параметр. Тоді для всього текстового змісту на сторінці буде застособуватися цей шрифт. Яещо потрібно тільки для окремих елементів, тоді звертаєтесь окремо за назвою класу чи тегу, відповідно до завдання чи вашої ідеї. 

    нижче після імпорту шрифту приклад з використанням його для всієї сторінки, тобто для body
*/

@import url('https://fonts.googleapis.com/css2?family=Kanit:wght@500&display=swap');

body{
    font-family: 'Kanit', sans-serif;
}

/* звернення до всіх тегів h1 */
h1{

    /* параметр text-align - вирівнювання тексту, значення center - по центру сторінки */
    text-align: center;

    /* параметр color - колір тексту */
    color: #7e1bc1;

    /* параметр background-color - фоновий колір елементу */
    background-color: #ffd900;
}

/* звернення до всіх елементів, які мають атрибут class із значенням text */
.text{
    /* вирівнювання тексту по ширині сторінки */
    text-align: justify;
}

img{
    /* width - ширина елементу (після числового значення вказуються одиниці виміру, поки що використовуємо px) */
    width: 200px;

    /* height - ширина елементу (після числового значення вказуються одиниці виміру, поки що використовуємо px) */
    /* height: 400px; */
    /* для того, щоб зберігати пропорції зображень, то краще вказувати тільки один з параметрів, або ширину, або висоту (інша автоматично підтягнеться до відповідного розміру). Взагалі ширину та висоту можна задавати всім елементам, а зауваження у попередньому реченні актуальне тільки для зображень */
}

h2{
    /* margin - зовнішній відступ (тобто, відстань поточного елементу від сусідніх). Може приймати різну кількість значень:

        Одне значення: margin: 10px; - встановлює всі чотири відступи (верхній, правий, нижній, лівий) на одне однакове значення (по 10px).

        Два значення: margin: 10px 20px; - перше значення встановлює верхню та нижню межі (10px), друге значення встановлює ліву та праву межі (20px).
        
        Три значення: margin: 10px 20px 30px; - перше значення встановлює верхню межу (10px), друге значення встановлює ліву та праву межі (20px), третє значення встановлює нижню межу (30px).

        Чотири значення: margin: 10px 20px 30px 40px; - перше значення встановлює верхню межу (10px), друге значення встановлює праву межу (20px), третє значення встановлює нижню межу (30px), четверте значення встановлює ліву межу (40px).

        У css є додаткові параметри для відступів із вказанням сторони. Коли потрібно зробити відступ тільки з однієї сторони, то коректно їх використовувати.
        
            margin-top: 10px; - відступ зверху
            margin-right: 10px; - справа 
            margin-bottom: 10px; - знизу 
            margin-left: 10px; - зліва

    */

    margin: 20px;
}

img{
    /* 
    display: block; - необхідно використовувати, щоб із строчного елементу зробити блочний
    */
    display: block; 

    background-color: gold;

    /* padding - внутрішній відступ елементу (в середину від своїх розмірів, кордонів). Він точно так же, як margin може приймати різну кількість значень і розпріділяються вони за таким же принципом: 
    
        Одне значення: padding: 10px; - встановлює всі чотири внутрішній відступи (верхній, правий, нижній, лівий) на одне однакове значення (по 10px).

        Два значення: padding: 10px 20px; - перше значення встановлює верхню та нижню межі (10px), друге значення встановлює ліву та праву межі (20px).
        
        Три значення: padding: 10px 20px 30px; - перше значення встановлює верхню межу (10px), друге значення встановлює ліву та праву межі (20px), третє значення встановлює нижню межу (30px).

        Чотири значення: padding: 10px 20px 30px 40px; - перше значення встановлює верхню межу (10px), друге значення встановлює праву межу (20px), третє значення встановлює нижню межу (30px), четверте значення встановлює ліву межу (40px).

        І так же є окремі параметри, для вказання відступу з однієї сторони: 
            padding-top: 10px; - внутрішній відступ зверху
            padding-right: 10px; - справа 
            padding-bottom: 10px; - знизу 
            padding-left: 10px; - зліва

    */
    padding: 50px;

    /* border-radius - параметр для скруглення кутів елементу. Якщо потрібно зробити елемент круглим, то вказуємо значення скруглення 50% або 100%. Зверніть увагу, елемент в такому випадку буде відображатися круглим, якщо має однакову ширину та висоту, інакше буде овальним */
    border-radius: 20%;
}

.text2{
    color: blue;
    background-color: gold;
}

h1{
    /* transition - використовується для встановлення плавної анімації між двома станами елемента. дозволяє змінювати властивості елемента з плавним переходом з одного значення в інше. 

        all - Властивість, яка буде анімована, наприклад background-color, width, height тощо. Ми вказуємо саме all, щоб застосовувалося для абсолютно всіх змін, всіх параметрів

        0.3s - Тривалість переходу, вказана у секундах або мілісекундах, наприклад 0.5s або 500ms

        ease - тип анімації. визначає, як змінюватись властивість впродовж переходу. Наприклад, значення ease використовується для плавного затухання на початку та в кінці переходу, а значення linear змінює властивість з постійною швидкістю протягом усього переходу. Натисніть на місці цього параметру у VSCode натисніть Ctrl+Пробіл щоб побачити у підказці перелік варіантів
    */
    transition: all 0.3s ease;
}

/* :hover - псевдоклас, який відповідає за обробку події наведення мишею на елемент. У фігурних скобках прописується що саме у зовнішньому вигляді елементу повинно змінитися коли на нього користувач наводить курсор */
h1:hover{
    text-align: center;
    background-color: blue;
    font-size: 100px;
    cursor: pointer;
}